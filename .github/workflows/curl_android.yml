### https://github.com/robertying/openssl-curl-android
### https://github.com/jasonacox/Build-OpenSSL-cURL
### https://github.com/leenjewel/openssl_for_ios_and_android

name: 'curl android'
run-name: 'Build curl for android'

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
      - name: 'read config.json'
        id: config
        uses: ActionsTools/read-json-action@main
        with:
          file_path: "config.json"
      - name: 'Setup Ninja'
        uses: ashutoshvarma/setup-ninja@master
        with:
          version: 1.12.1
      - name: 'Setup NDK'
        id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r27c
      - name: 'Fetch OpenSSL'
        shell: pwsh
        run: |
          $url = 'https://github.com/puzankov-al/ci/releases/download/all/openssl-android-${{ steps.config.outputs.openssl_tag }}.zip'
          Invoke-WebRequest $url -OutFile ./openssl.zip;
          Expand-Archive -Path openssl.zip;
      - name: 'Checkout source'
        uses: actions/checkout@v4
        with:
          repository: 'curl/curl'
          ref: ${{steps.config.outputs.curl_tag}}
          fetch-depth: 0
          path: 'source'
      - name: 'cmake configure'
        shell: bash
        run: |
          for ARCH in 'armeabi-v7a' 'arm64-v8a' 'x86' 'x86_64'            
          do
            echo "Build for $ARCH"
            cmake -S source -B build/$ARCH \
                  -GNinja \
                  -DCMAKE_BUILD_TYPE=Release \
                  -DCMAKE_TOOLCHAIN_FILE=${{steps.setup-ndk.outputs.ndk-path}}/build/cmake/android.toolchain.cmake \
                  -DCMAKE_INSTALL_PREFIX=install/$ARCH \
                  -DANDROID_PLATFORM="29" \
                  -DANDROID_ABI=$ARCH \
                  -DCMAKE_PREFIX_PATH="${{ github.workspace }}/openssl/$ARCH/lib/cmake/OpenSSL" \
                  -DCMAKE_FIND_ROOT_PATH_MODE_PACKAGE=BOTH \
                  -DCMAKE_FIND_PACKAGE_PREFER_CONFIG=TRUE \
                  -DBUILD_CURL_EXE=OFF \
                  -DCURL_USE_OPENSSL=ON \
                  -DUSE_NGHTTP2=OFF \
                  -DCURL_USE_LIBSSH2=OFF \
                  -DUSE_LIBIDN2=OFF \
                  -DHTTP_ONLY=ON
            cmake --build build/$ARCH --config Release --parallel
            cmake --install build/$ARCH --config Release
          done
      - name: 'Store source archives'
        uses: actions/upload-artifact@v4
        with:
          name: 'curl-android-${{steps.config.outputs.curl_tag}}'
          path: '${{ github.workspace}}/install'
