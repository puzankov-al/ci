name: 'openssl'
run-name: 'Build openssl'

on:
  workflow_dispatch:

jobs:
#  windows:
#    runs-on: windows-latest
#    steps:
#      - name: 'Setup Developer Command Prompt for Microsoft Visual C++'
#        uses: ilammy/msvc-dev-cmd@v1
#        with:
#          arch: win64
#      - name: 'Setup Perl'
#        uses: shogo82148/actions-setup-perl@v1
#        with:
#          perl-version: "5.38"
#      - name: 'Setup perl dependencies'
#        shell: pwsh
#        run: cpan -f -i Text::Template
#      - name: 'Setup NASM'
#        uses: ilammy/setup-nasm@v1
#      - name: 'Checkout config'
#        uses: actions/checkout@v4
#        with:
#          path: 'config'
#          sparse-checkout: 'openssl'
#      - name: 'read config.json'
#        id: config
#        uses: ActionsTools/read-json-action@main
#        with:
#          file_path: "config/openssl/config.json"
#      - name: 'Checkout source'
#        uses: actions/checkout@v4
#        with:
#          repository: 'openssl/openssl'
#          ref: ${{steps.config.outputs.openssl_tag}}
#          fetch-depth: 0
#          path: 'source'
#      - name: 'make dirs'
#        shell: bash
#        run: |
#          mkdir build
#          mkdir install
#      - name: 'configure'
#        working-directory: build
#        shell: pwsh
#        run: |
#          perl ../source/Configure VC-WIN64A
#      - name: 'build'
#        working-directory: build
#        shell: pwsh
#        run: nmake
#      - name: 'install'
#        working-directory: build
#        shell: pwsh
#        run: nmake install DESTDIR=../install
#      - name: 'Store source archives'
#        uses: actions/upload-artifact@v4
#        with:
#          name: 'openssl-windows-${{steps.config.outputs.openssl_tag}}'
#          path: '${{ github.workspace}}/install/Program Files/OpenSSL'

  android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
#        arch: [ 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64' ]
        arch: [ 'x86_64' ]
    steps:
      - name: 'Setup NDK'
        id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r27c
      - name: 'Setup Perl'
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: "5.38"
      - name: 'Setup perl dependencies'
        shell: pwsh
        run: cpan -f -i Text::Template
      - name: 'Setup NASM'
        uses: ilammy/setup-nasm@v1
      - name: 'Checkout config'
        uses: actions/checkout@v4
        with:
          path: 'config'
          sparse-checkout: 'openssl'
      - name: 'read config.json'
        id: config
        uses: ActionsTools/read-json-action@main
        with:
          file_path: "config/openssl/config.json"
      - name: 'Checkout source'
        uses: actions/checkout@v4
        with:
          repository: 'openssl/openssl'
          ref: ${{steps.config.outputs.openssl_tag}}
          fetch-depth: 0
          path: 'source'
      - name: 'make dirs'
        shell: bash
        run: |
          mkdir build
          mkdir install
      - name: 'configure'
        working-directory: build
        shell: bash
        run: |
          export ANDROID_NDK_ROOT=${{steps.setup-ndk.outputs.ndk-path}}
          PATH=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
          ../source/Configure android-${{ matrix.arch }} -D__ANDROID_API__=29 --prefix=${{ github.workspace}}/install
      - name: 'build'
        working-directory: install
        shell: bash
        run: |
          export ANDROID_NDK_ROOT=${{steps.setup-ndk.outputs.ndk-path}}
          PATH=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
          make -C ../build
      - name: 'Store source archives'
        uses: actions/upload-artifact@v4
        with:
          name: 'openssl-android-${{ matrix.arch }}-${{steps.config.outputs.openssl_tag}}'
          path: '${{ github.workspace}}/install'