name: 'fmt'
run-name: 'Build fmt'

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
      - name: 'read config.json'
        id: config
        uses: ActionsTools/read-json-action@main
        with:
          file_path: "config.json"
      - name: 'Setup iOS toolchain'
        uses: actions/checkout@v4
        with:
          repository: 'leetal/ios-cmake'
          ref: '4.5.0'
          path: 'ios-cmake'
          sparse-checkout: 'ios.toolchain.cmake'
      - name: 'Checkout source'
        uses: actions/checkout@v4
        with:
          repository: 'fmtlib/fmt'
          ref: ${{steps.config.outputs.fmt_tag}}
          fetch-depth: 0
          path: 'source'
      - name: 'cmake configure'
        shell: bash
        run: |
          cmake -S source -B build \
                -GXcode \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_INSTALL_PREFIX="install-iphone" \
                -DCMAKE_TOOLCHAIN_FILE='${{ github.workspace}}/ios-cmake/ios.toolchain.cmake' \
                -DPLATFORM=OS64 \
                -DENABLE_BITCODE=TRUE \
                -DCMAKE_OSX_DEPLOYMENT_TARGET=12.0 \
                -DFMT_DOC=OFF \
                -DFMT_TEST=OFF
          cmake --build build --config Release --parallel
          cmake --install build --config Release

          rm -r build

          cmake -S source -B build \
                -GXcode \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_INSTALL_PREFIX="install-iphonesimulator64" \
                -DCMAKE_TOOLCHAIN_FILE='${{ github.workspace}}/ios-cmake/ios.toolchain.cmake' \
                -DPLATFORM=SIMULATOR64 \
                -DENABLE_BITCODE=TRUE \
                -DCMAKE_OSX_DEPLOYMENT_TARGET=12.0 \
                -DFMT_DOC=OFF \
                -DFMT_TEST=OFF
          cmake --build build --config Release --parallel
          cmake --install build --config Release

          rm -r build

          cmake -S source -B build \
                -GXcode \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_INSTALL_PREFIX="install-iphonesimulatorarm64" \
                -DCMAKE_TOOLCHAIN_FILE='${{ github.workspace}}/ios-cmake/ios.toolchain.cmake' \
                -DPLATFORM=SIMULATORARM64 \
                -DENABLE_BITCODE=TRUE \
                -DCMAKE_OSX_DEPLOYMENT_TARGET=12.0 \
                -DFMT_DOC=OFF \
                -DFMT_TEST=OFF
          cmake --build build --config Release --parallel
          cmake --install build --config Release

          cp -r 'install-iphonesimulator64' 'install-iphonesimulator'

          lipo \
            install-iphonesimulator64/lib/libfmt.a \
            install-iphonesimulatorarm64/lib/libfmt.a \
            -create -output install-iphonesimulator/lib/libfmt.a

          xcodebuild -create-xcframework \
                     -library install-iphonesimulator/lib/libfmt.a \
                     -headers install-iphonesimulator/include \
                     -library install-iphone/lib/libfmt.a \
                     -headers install-iphone/include \
                     -output install/xcframework/fmt.xcframework
      - name: 'Store source archives'
        uses: actions/upload-artifact@v4
        with:
          name: 'fmt-ios-${{steps.config.outputs.fmt_tag}}'
          path: '${{ github.workspace}}/install/xcframework'
